{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Link from \"next/link\";\nimport { TextField, Button, InputAdornment } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Person, Image, Loyalty, AccountCircle } from \"@material-ui/icons\";\nimport { editPostDetail, getPostDetail } from \"../../store/actions/postAction\";\nimport \"../../styles/editpost.css\";\nimport Navbar from \"../../components/Navbar\";\n\nfunction Id() {\n  const {\n    0: id,\n    1: setID\n  } = useState(\"\");\n  const {\n    0: username,\n    1: setUsername\n  } = useState(\"\");\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  const {\n    0: caption,\n    1: setCaption\n  } = useState(\"\");\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const post = useSelector(state => state.postReducer.post);\n  useEffect(() => {\n    if (post[0]) {\n      setID(post[0].id);\n      setUsername(post[0].username);\n      setImage(post[0].imageUrl);\n      setCaption(post[0].caption);\n    }\n  }, [post]);\n  useEffect(() => {\n    dispatch(getPostDetail(router.query.id));\n    console.log(router.query.id);\n  }, []);\n\n  const editpost = () => {\n    dispatch(editPostDetail(id, username, image, caption));\n    router.push(\"/\");\n  };\n\n  return __jsx(\"div\", null, __jsx(Navbar, null), __jsx(\"div\", {\n    className: \"main__editpost\"\n  }, __jsx(\"div\", {\n    className: \"editpost\"\n  }, __jsx(\"div\", {\n    className: \"title\",\n    style: {\n      background: \"white\"\n    }\n  }, __jsx(\"h1\", null, \"Edit Post \")), __jsx(\"form\", {\n    className: \"form\",\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(\"div\", {\n    className: \"icons\"\n  }, __jsx(TextField, {\n    className: \"form__input\",\n    id: \"input-with-icon-textfield\",\n    label: \"TextField\",\n    onChange: e => setUsername(e.target.value),\n    value: username,\n    InputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\"\n      }, __jsx(AccountCircle, null))\n    }\n  })), __jsx(\"div\", {\n    className: \"icons\"\n  }, __jsx(TextField, {\n    className: \"form__input\",\n    id: \"input-with-icon-textfield\",\n    label: \"TextField\",\n    onChange: e => setImage(e.target.value),\n    value: image,\n    InputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\"\n      }, __jsx(Image, null))\n    }\n  })), __jsx(\"div\", {\n    className: \"icons\"\n  }, __jsx(TextField, {\n    className: \"form__input\",\n    id: \"input-with-icon-textfield\",\n    label: \"TextField\",\n    onChange: e => setCaption(e.target.value),\n    value: caption,\n    InputProps: {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\"\n      }, __jsx(Loyalty, null))\n    }\n  })), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"button__add\",\n    onClick: editpost\n  }, \"Submit\"), __jsx(Link, {\n    href: \"/\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: \"button__add\"\n  }, \"Back\"))))));\n}\n\nId.getInitialProps = async () => {\n  return {};\n};\n\nexport default Id;","map":null,"metadata":{},"sourceType":"module"}