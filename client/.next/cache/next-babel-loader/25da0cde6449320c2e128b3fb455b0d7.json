{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst defaultState = {\n  posts: [{\n    id: 1,\n    username: \"jackson\",\n    imageUrl: \"https://img.idxchannel.com/media/1000/images/idx/2020/02/28/astra.jpg\",\n    caption: \"Jadilah Kebanggaan Bangsa\",\n    comments: [{\n      user: \"Charles\",\n      comment: \"Selalu di depan\"\n    }]\n  }, {\n    id: 2,\n    username: \"clinton\",\n    imageUrl: \"https://www.astra.co.id/Public/april-19/Banner-MA.png\",\n    caption: \"Jadilah Kebanggaan Bangsa\",\n    comments: [{\n      user: \"kevin\",\n      comment: \"Mantab\"\n    }]\n  }],\n  post: {}\n};\nexport default function reducer(state = defaultState, action) {\n  switch (action.type) {\n    case \"ADD_POST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: state.posts.concat(action.newPost)\n      });\n\n    case \"DETAIL_POST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: state.posts.filter(post => {\n          if (post.id == action.id) {\n            return post;\n          }\n        })\n      });\n\n    case \"EDIT_POST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: state.posts.filter(post => {\n          if (post.id == action.editpost.id) {\n            post.username = action.editpost.username;\n            post.imageUrl = action.editpost.image;\n            post.caption = action.editpost.caption;\n          }\n        })\n      });\n\n    case \"DELETE_POST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: state.posts.filter(post => {\n          return post.id !== action.id;\n        })\n      });\n\n    case \"ADD_COMMENT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: state.posts.map(post => {\n          if (post.id == action.id) {\n            post.comments.push(action.data);\n          }\n\n          return _objectSpread(_objectSpread({}, post), action.data);\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}